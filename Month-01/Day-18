//https://leetcode.com/problems/next-permutation/
class Solution {
    public void nextPermutation(int[] arr) {
        int n=arr.length;
        for(int i=n-1;i>0;i--){
            if(arr[i-1]<arr[i]){ 
                int pivot=i-1;
                for(int p=n-1;p>pivot;p--){//finding smallest that is greater than pivot from last
                    if(arr[p]>arr[pivot]){
                        int temp=arr[pivot];
                        arr[pivot]=arr[p];
                        arr[p]=temp;
                        break;
                    }
                }
                int k=pivot+1;
                int j=n-1;
                while(k<j){//sorting the sufix
                    int t=arr[k];
                    arr[k]=arr[j];
                    arr[j]=t;
                    k++;
                    j--;
                }
                return; 
            }
        }
        int i=0;
        int j=n-1;
        while(i<j){
            int temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
            i++;
            j--; 
        }
        return;
    }
}